---
import IconOrbit from './IconOrbit.astro';
import { Icon } from 'astro-icon/components'
interface IconItem { title: string; icon?: string; iconName?: string; slug: string }
interface Props { icons: Array<{ data: any; slug: string }>; onLabel?: string }
const { icons, onLabel = 'Apps' } = Astro.props as Props;
const items: IconItem[] = icons.map((p) => ({ title: p.data.title, icon: p.data.icon, iconName: p.data.iconName, slug: p.slug }));
---
<style>
  .cloudWrap { position: relative; margin: 3rem auto 1rem; max-width: 1100px; padding: 1.25rem; z-index: 2; }
  /* Full-bleed breakout so the orbit can use full viewport width on large screens */
  .bleed { position: relative; width: 100vw; margin-left: calc(50% - 50vw); margin-right: calc(50% - 50vw); }
  .titleRow { display: flex; align-items: center; justify-content: center; gap: .5rem; }
  .title { color: var(--white); font-weight: 700; letter-spacing: .04em; }
  .cluster {
    position: relative; margin-top: .75rem; border: none;
    border-radius: 20px; padding: 0; background: transparent;
  }
  .chevron { width: 18px; height: 18px; opacity: .8; transform: translateY(2px); }

  .icons { display: contents; }
  .icon { display: inline-flex; }

  @keyframes driftA { 0%,100%{ transform: translate(0,0) } 50%{ transform: translate(6px,-8px) rotate(2deg) } }
  @keyframes driftB { 0%,100%{ transform: translate(0,0) } 50%{ transform: translate(-6px,6px) rotate(-2deg) } }
  @keyframes driftC { 0%,100%{ transform: translate(0,0) } 50%{ transform: translate(4px,-4px) rotate(1deg) } }
  @media (prefers-reduced-motion: reduce) { .icon { animation: none !important; } }

  .hint { text-align: center; margin-top: .5rem; color: var(--lavender); opacity: .9; font-size: .95rem; display: flex; align-items: center; justify-content: center; gap: .45rem; }
</style>

<div class="cloudWrap">
  <div class="cluster">
    <div class="bleed">
      <div class="icons" aria-label="App icons">
        <IconOrbit icons={items} iconPx={96} gap={18} radiusScale={0.46} spin={0.008} />
      </div>
    </div>
  </div>
</div>

<script is:inline>
  (function(){
    function layout(){
      var grid = document.querySelector('.cloudWrap .icons');
      if (!grid) return;
      var items = Array.from(grid.querySelectorAll('.icon'));
      // compute number of columns from computed style
      var cols = (getComputedStyle(grid).gridTemplateColumns || '').split(' ').filter(Boolean).length || 1;
      var offsets = [0, -14, 10, -8, 16, -6, 12];
      items.forEach(function(el, i){
        var c = i % cols;
        el.style.setProperty('--co', offsets[c % offsets.length] + 'px');
        var anim = (i % 3 === 0) ? 'driftA' : (i % 3 === 1) ? 'driftB' : 'driftC';
        el.style.animation = anim + ' ' + (22 + (i % 7) * 3) + 's ease-in-out ' + ((i % 5) * 0.3) + 's infinite';
      });
    }
    var ro = new ResizeObserver(layout);
    var root = document.querySelector('.cloudWrap .icons');
    if (root) ro.observe(root);
    if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', layout); else layout();
  })();
  </script>
