---
import { Icon } from 'astro-icon/components'
interface Props { icons: Array<{ title: string; icon?: string; iconName?: string }>; iconPx?: number; gap?: number; radiusScale?: number; spin?: number }
const { icons, iconPx = 96, gap = 18, radiusScale = 0.46, spin = 0.006 } = Astro.props as Props;
---
<div class="orbit" data-icon-orbit="1" data-iconpx={iconPx} data-gap={gap} data-radius-scale={radiusScale} data-spin={spin} style={`--size:${iconPx}px`} aria-label="App icons">
  {icons.map((it) => (
    <span class="node">
      <span class="inner" title={it.title}>
        {it.icon ? (
          <img src={it.icon} alt={it.title} />
        ) : it.iconName ? (
          <Icon name={it.iconName} />
        ) : null}
      </span>
    </span>
  ))}
</div>

<style>
.orbit { position: relative; width: 100%; height: clamp(360px, 80vh, 1200px); }
.orbit { opacity: 0; transition: opacity .6s ease; }
.orbit.ready { opacity: 1; }
.orbit .node { position: absolute; left: 0; top: 0; }
.orbit .inner {
  width: var(--size); height: var(--size);
  display: grid; place-items: center;
  border-radius: 18px; padding: 8px;
  background: rgba(255,255,255,0.06);
  border: 1px solid rgba(255,255,255,0.14);
  box-shadow: 0 6px 18px rgba(0,0,0,.35);
  will-change: transform;
}
.orbit .inner { transform: translateY(20vh); }
.orbit.ready .inner { animation: rise 1.6s ease-out .4s forwards, driftC 24s ease-in-out .4s infinite; }
.orbit img { width: 100%; height: 100%; border-radius: 12px; display: block; }
.orbit .inner svg { width: 100%; height: 100%; border-radius: 12px; display: block; }
@keyframes rise { from { transform: translateY(20vh); } to { transform: translateY(0); } }
@keyframes driftC {
  0%, 100% { transform: translate(0,0); }
  30% { transform: translate(4px, -6px) rotate(1.5deg); }
  60% { transform: translate(-6px, 3px) rotate(-1.5deg); }
}
@media (prefers-reduced-motion: reduce) {
  .orbit .inner { animation: none; transform: none; }
}
</style>

<script type="module" src="/src/components/icon-orbit.client.ts"></script>


